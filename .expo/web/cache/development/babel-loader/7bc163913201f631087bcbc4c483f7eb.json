{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FETCH_PRODUCTS } from \"../actions/types\";\nvar initialState = {\n  items: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/ReactNativeProject/react-native-shop-with-expo/src/redux/reducers/productReducer.js"],"names":["FETCH_PRODUCTS","initialState","items","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,cAAT;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAGA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,cAAL;AACI,6CACOG,KADP;AAEID,QAAAA,KAAK,EAACE,MAAM,CAACE;AAFjB;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH","sourcesContent":["import { FETCH_PRODUCTS } from '../actions/types';\n\nconst initialState = {\n    items: []\n};\nexport default function(state = initialState, action) {\n    switch(action.type){\n        case FETCH_PRODUCTS:\n            return {\n                ...state,\n                items:action.payload\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}