{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport themes from \"../styles/theme.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Product = function (_Component) {\n  _inherits(Product, _Component);\n\n  var _super = _createSuper(Product);\n\n  function Product() {\n    var _this;\n\n    _classCallCheck(this, Product);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.addToCart = function () {\n      _this.props.addItemsToCart(_this.props.item);\n    };\n\n    return _this;\n  }\n\n  _createClass(Product, [{\n    key: \"render\",\n    value: function render() {\n      var product = this.props.product;\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: product.picture\n            },\n            style: {\n              borderRadius: 10,\n              width: 150,\n              height: 150,\n              resizeMode: 'contain'\n            }\n          }), _jsxs(View, {\n            style: styles.productDes,\n            children: [_jsx(Text, {\n              children: product.title\n            }), _jsxs(Text, {\n              children: [\"Rp. \", product.cost.toFixed(2)]\n            }), _jsx(Text, {\n              children: product.Penulis\n            }), _jsx(TouchableOpacity, {\n              onPress: this.addToCart,\n              style: styles.addBtn,\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"Add to cart\"\n              })\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Product;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    margin: 10\n  },\n  productDes: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n    width: '60%'\n  },\n  addBtn: {\n    borderRadius: 30,\n    margin: 10,\n    backgroundColor: themes.BUTTON_COLOR\n  },\n  text: {\n    color: '#fff',\n    fontSize: 16,\n    padding: 10\n  }\n});\nexport default Product;","map":{"version":3,"sources":["D:/ReactNativeProject/react-native-shop-with-expo/src/components/Product.component.js"],"names":["React","Component","themes","Product","addToCart","props","addItemsToCart","item","product","styles","container","flexDirection","justifyContent","uri","picture","borderRadius","width","height","resizeMode","productDes","title","cost","toFixed","Penulis","addBtn","text","StyleSheet","create","flex","alignItems","margin","marginTop","backgroundColor","BUTTON_COLOR","color","fontSize","padding"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AASA,OAAOC,MAAP;;;;IAEMC,O;;;;;;;;;;;;;;;;UACFC,S,GAAY,YAAM;AACd,YAAKC,KAAL,CAAWC,cAAX,CAA0B,MAAKD,KAAL,CAAWE,IAArC;AACH,K;;;;;;;WACD,kBAAS;AACL,UAAQC,OAAR,GAAoB,KAAKH,KAAzB,CAAQG,OAAR;AACI,aACJ,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,kBACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,aAAa,EAAC,KAAf;AAAsBC,YAAAA,cAAc,EAAE;AAAtC,WAAb;AAAA,qBACA,KAAC,KAAD;AAAO,YAAA,MAAM,EAAE;AAACC,cAAAA,GAAG,EAACL,OAAO,CAACM;AAAb,aAAf;AAAsC,YAAA,KAAK,EAAE;AAACC,cAAAA,YAAY,EAAC,EAAd;AAAiBC,cAAAA,KAAK,EAAC,GAAvB;AAA2BC,cAAAA,MAAM,EAAC,GAAlC;AAAsCC,cAAAA,UAAU,EAAC;AAAjD;AAA7C,YADA,EAEA,MAAC,IAAD;AAAM,YAAA,KAAK,EAAET,MAAM,CAACU,UAApB;AAAA,uBACI,KAAC,IAAD;AAAA,wBAAOX,OAAO,CAACY;AAAf,cADJ,EAEI,MAAC,IAAD;AAAA,iCAAYZ,OAAO,CAACa,IAAT,CAAeC,OAAf,CAAuB,CAAvB,CAAX;AAAA,cAFJ,EAGI,KAAC,IAAD;AAAA,wBAAOd,OAAO,CAACe;AAAf,cAHJ,EAII,KAAC,gBAAD;AAAkB,cAAA,OAAO,EAAE,KAAKnB,SAAhC;AAA2C,cAAA,KAAK,EAAEK,MAAM,CAACe,MAAzD;AAAA,wBACI,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAEf,MAAM,CAACgB,IAApB;AAAA;AAAA;AADJ,cAJJ;AAAA,YAFA;AAAA;AADJ,QADI;AAgBP;;;;EAtBiBxB,S;;AA0BtB,IAAMQ,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC7BjB,EAAAA,SAAS,EAAC;AACNkB,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,MAAM,EAAE;AAHF,GADmB;AAM7BX,EAAAA,UAAU,EAAE;AACRP,IAAAA,cAAc,EAAE,QADR;AAERiB,IAAAA,UAAU,EAAE,QAFJ;AAGRE,IAAAA,SAAS,EAAE,EAHH;AAIRf,IAAAA,KAAK,EAAC;AAJE,GANiB;AAY7BQ,EAAAA,MAAM,EAAE;AACJT,IAAAA,YAAY,EAAE,EADV;AAEJe,IAAAA,MAAM,EAAE,EAFJ;AAGJE,IAAAA,eAAe,EAAE9B,MAAM,CAAC+B;AAHpB,GAZqB;AAiB7BR,EAAAA,IAAI,EAAE;AACFS,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,QAAQ,EAAE,EAFR;AAGFC,IAAAA,OAAO,EAAE;AAHP;AAjBuB,CAAlB,CAAf;AAwBA,eAAejC,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { \n    View, \n    Text,\n    Image,\n    StyleSheet,\n    TouchableOpacity \n} from 'react-native';\n\nimport themes from '../styles/theme.style';\n\nclass Product extends Component {\n    addToCart = () => {\n        this.props.addItemsToCart(this.props.item)\n    }\n    render() {\n        const { product } = this.props;\n            return (\n        <View style={styles.container}>\n            <View style={{flexDirection:'row', justifyContent: 'space-between'}} >\n            <Image source={{uri:product.picture}} style={{borderRadius:10,width:150,height:150,resizeMode:'contain'}}/>\n            <View style={styles.productDes}>\n                <Text>{product.title}</Text>\n                <Text>Rp. {(product.cost).toFixed(2)}</Text>\n                <Text>{product.Penulis}</Text>\n                <TouchableOpacity onPress={this.addToCart} style={styles.addBtn}>\n                    <Text style={styles.text}>Add to cart</Text>\n                </TouchableOpacity>\n            </View>\n            </View>\n        </View>\n\n    );\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        flex: 1,\n        alignItems: 'center',\n        margin: 10,\n    },\n    productDes: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 10,\n        width:'60%'\n    },\n    addBtn: {\n        borderRadius: 30,\n        margin: 10,\n        backgroundColor: themes.BUTTON_COLOR\n    },\n    text: {\n        color: '#fff',\n        fontSize: 16,\n        padding: 10\n    }\n});\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}