{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Products from \"../pages/Products\";\nimport Checkout from \"../pages/Checkout\";\nimport Receipt from \"../pages/Receipt\";\nimport ProfileScreen from \"../pages/Profile\";\nimport Login from \"../pages/Login\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-ionicons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar Route = function Route() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"MainApp\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: Login\n    }), _jsx(Stack.Screen, {\n      name: \"MainApp\",\n      component: BottomTabScreen\n    })]\n  });\n};\n\nvar BottomTabScreen = function BottomTabScreen() {\n  return _jsxs(Tab.Navigator, {\n    headerShown: false,\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Products') {\n            iconName = focused ? 'list' : 'list';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n\n          return _jsx(Icon, {\n            name: \"{iconName}\",\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Products\",\n      component: Products\n    }), _jsx(Tab.Screen, {\n      name: \"Checkout\",\n      component: Checkout\n    }), _jsx(Tab.Screen, {\n      name: \"Receipt\",\n      component: Receipt\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\n\nexport default Route;","map":{"version":3,"sources":["/Users/abiamarulloh/MobileApp/reduxappexpo/src/routes/index.js"],"names":["React","createStackNavigator","Products","Checkout","Receipt","ProfileScreen","Login","createBottomTabNavigator","Icon","Stack","Tab","Route","BottomTabScreen","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,IAAMC,KAAK,GAAGR,oBAAoB,EAAlC;AACA,IAAMS,GAAG,GAAGH,wBAAwB,EAApC;;AAEA,IAAMI,KAAK,GAAG,SAARA,KAAQ,GAAM;AACnB,SACC,MAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,SAAlC;AAAA,eACC,KAAC,KAAD,CAAO,MAAP;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,SAAS,EAAEL;AAFZ,MADD,EAKC,KAAC,KAAD,CAAO,MAAP;AACC,MAAA,IAAI,EAAC,SADN;AAEC,MAAA,SAAS,EAAEM;AAFZ,MALD;AAAA,IADD;AAaA,CAdD;;AAgBA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,SACE,MAAC,GAAD,CAAK,SAAL;AAAe,IAAA,WAAW,EAAE,KAA5B;AAAmC,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC5DC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAC7BD,YAAAA,QAAQ,GAAGH,OAAO,GACd,MADc,GAEd,MAFJ;AAGD,WAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AACpCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,UAAtC;AACD;;AAGD,iBAAO,KAAC,IAAD;AAAM,YAAA,IAAI,EAAC,YAAX;AAAwB,YAAA,IAAI,EAAEE,IAA9B;AAAoC,YAAA,KAAK,EAAED;AAA3C,YAAP;AACD,SAd2D;AAe5DI,QAAAA,qBAAqB,EAAE,QAfqC;AAgB5DC,QAAAA,uBAAuB,EAAE;AAhBmC,OAAhB;AAAA,KAAlD;AAAA,eAmBE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,SAAS,EAAEnB;AAAvC,MAnBF,EAoBE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,SAAS,EAAEC;AAAvC,MApBF,EAqBE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,SAAjB;AAA2B,MAAA,SAAS,EAAEC;AAAtC,MArBF,EAsBE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,SAAjB;AAA2B,MAAA,SAAS,EAAEC;AAAtC,MAtBF;AAAA,IADF;AA0BD,CA3BD;;AA4BA,eAAeM,KAAf","sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Products from '../pages/Products';\nimport Checkout from '../pages/Checkout';\nimport Receipt from '../pages/Receipt';\nimport ProfileScreen from '../pages/Profile';\nimport Login from '../pages/Login';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-ionicons'\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst Route = () => {\n\treturn (\n\t\t<Stack.Navigator initialRouteName='MainApp'>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"Login\"\n\t\t\t\tcomponent={Login}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"MainApp\"\n\t\t\t\tcomponent={BottomTabScreen}\n\t\t\t/>\n\t\t</Stack.Navigator>\n\t\n\t)\n}\n\nconst BottomTabScreen = () => {\n  return (\n    <Tab.Navigator headerShown={false} screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Products') {\n              iconName = focused\n                ? 'list'\n                : 'list';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n\n            // You can return any component that you like here!\n            return <Icon name=\"{iconName}\" size={size} color={color} />;\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray',\n        })}\n      >\n      <Tab.Screen name=\"Products\" component={Products} />\n      <Tab.Screen name=\"Checkout\" component={Checkout} />\n      <Tab.Screen name=\"Receipt\" component={Receipt} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  )\n} \nexport default Route;"]},"metadata":{},"sourceType":"module"}