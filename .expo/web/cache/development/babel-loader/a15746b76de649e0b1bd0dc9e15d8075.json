{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Product from \"../components/Product.component\";\nimport { addToCart } from \"../redux/actions/cartActions\";\nimport { fetchProducts } from \"../redux/actions/productAction\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar logoImage = require(\"../assets/images/eco-logo.png\");\n\nvar Products = function (_Component) {\n  _inherits(Products, _Component);\n\n  var _super = _createSuper(Products);\n\n  function Products(props) {\n    var _this;\n\n    _classCallCheck(this, Products);\n\n    _this = _super.call(this, props);\n\n    _this.UNSAFE_componentWillMount = function () {\n      _this.props.fetchProducts();\n    };\n\n    _this.addItemsToCart = function (product) {\n      _this.props.addToCart(product);\n    };\n\n    _this.goHome = function () {\n      _this.props.navigation.navigate('Products');\n    };\n\n    _this.onPress = function () {\n      _this.props.navigation.navigate('Checkout');\n    };\n\n    _this.state = {\n      opacity: new Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(Products, [{\n    key: \"startAnimation\",\n    value: function startAnimation() {\n      var _this2 = this;\n\n      Animated.timing(this.state.opacity, {\n        toValue: 0,\n        duration: 500,\n        useNativeDriver: true\n      }).start(function () {\n        setTimeout(function () {\n          _this2.endAnimation();\n        }, 100);\n      });\n    }\n  }, {\n    key: \"endAnimation\",\n    value: function endAnimation() {\n      Animated.timing(this.state.opacity, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          products = _this$props.products,\n          navigation = _this$props.navigation;\n      var cartItems = this.props.cartItems;\n      var animatedStyle = {\n        opacity: this.state.opacity\n      };\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(Animated.View, {\n          style: {\n            height: 50,\n            width: 350,\n            paddingTop: 10,\n            marginLeft: 10,\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            opacity: this.state.opacity\n          },\n          children: [_jsxs(Text, {\n            style: {\n              color: 'red',\n              fontSize: 14\n            },\n            children: [\"Your cart: \", cartItems.length, \" items\"]\n          }), _jsx(TouchableOpacity, {\n            onPress: this.onPress,\n            children: _jsx(Icon, {\n              name: \"chevron-right\",\n              size: 20,\n              color: \"#900\"\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.body,\n          children: _jsx(FlatList, {\n            data: products,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsx(Product, {\n                item: item,\n                addItemsToCart: _this3.addItemsToCart,\n                product: item\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.id;\n            },\n            ItemSeparatorComponent: function ItemSeparatorComponent() {\n              return _jsx(View, {\n                style: {\n                  height: 0.5,\n                  backgroundColor: '#34495e90'\n                }\n              });\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Products;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    borderRadius: 10,\n    backgroundColor: '#fff'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.products.items,\n    cartItems: state.cart.cart\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addToCart: addToCart,\n  fetchProducts: fetchProducts\n})(Products);","map":{"version":3,"sources":["D:/ReactNativeProject/react-native-shop-with-expo/src/pages/Products.js"],"names":["React","Component","connect","Icon","Product","addToCart","fetchProducts","logoImage","require","Products","props","UNSAFE_componentWillMount","addItemsToCart","product","goHome","navigation","navigate","onPress","state","opacity","Animated","Value","timing","toValue","duration","useNativeDriver","start","setTimeout","endAnimation","products","cartItems","animatedStyle","styles","container","height","width","paddingTop","marginLeft","flexDirection","justifyContent","color","fontSize","length","body","item","id","backgroundColor","StyleSheet","create","flex","borderRadius","mapStateToProps","items","cart"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAYA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,SAASC,SAAT;AACA,SAASC,aAAT;;;;AACA,IAAMC,SAAS,GAAGC,OAAO,iCAAzB;;IACMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAQnBC,yBARmB,GAQS,YAAM;AAChC,YAAKD,KAAL,CAAWJ,aAAX;AACD,KAVkB;;AAAA,UAYnBM,cAZmB,GAYF,UAACC,OAAD,EAAa;AAC5B,YAAKH,KAAL,CAAWL,SAAX,CAAqBQ,OAArB;AACD,KAdkB;;AAAA,UAenBC,MAfmB,GAeV,YAAM;AACb,YAAKJ,KAAL,CAAWK,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B;AACD,KAjBkB;;AAAA,UAuCnBC,OAvCmB,GAuCT,YAAM;AACd,YAAKP,KAAL,CAAWK,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B;AACD,KAzCkB;;AAEjB,UAAKE,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB;AADE,KAAb;AAFiB;AAOlB;;;;WAWD,0BAAiB;AAAA;;AACfD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAKJ,KAAL,CAAWC,OAA3B,EACE;AACEI,QAAAA,OAAO,EAAE,CADX;AAEEC,QAAAA,QAAQ,EAAE,GAFZ;AAGEC,QAAAA,eAAe,EAAE;AAHnB,OADF,EAKKC,KALL,CAKW,YAAM;AACbC,QAAAA,UAAU,CAAC,YAAM;AACf,UAAA,MAAI,CAACC,YAAL;AACD,SAFS,EAEP,GAFO,CAAV;AAGD,OATH;AAUD;;;WACD,wBAAe;AACbR,MAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAKJ,KAAL,CAAWC,OAA3B,EACE;AACEI,QAAAA,OAAO,EAAE,CADX;AAEEC,QAAAA,QAAQ,EAAE,GAFZ;AAGEC,QAAAA,eAAe,EAAE;AAHnB,OADF,EAKKC,KALL;AAMD;;;WAMD,kBAAS;AAAA;;AACP,wBAAiC,KAAKhB,KAAtC;AAAA,UAAQmB,QAAR,eAAQA,QAAR;AAAA,UAAkBd,UAAlB,eAAkBA,UAAlB;AACA,UAAQe,SAAR,GAAsB,KAAKpB,KAA3B,CAAQoB,SAAR;AACA,UAAIC,aAAa,GAAG;AAAEZ,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AAAtB,OAApB;AACA,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA,mBACE,MAAC,QAAD,CAAU,IAAV;AAAe,UAAA,KAAK,EAAE;AACpBC,YAAAA,MAAM,EAAE,EADY;AAEpBC,YAAAA,KAAK,EAAE,GAFa;AAGpBC,YAAAA,UAAU,EAAE,EAHQ;AAIpBC,YAAAA,UAAU,EAAE,EAJQ;AAKpBC,YAAAA,aAAa,EAAE,KALK;AAKEC,YAAAA,cAAc,EAAE,eALlB;AAMpBpB,YAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AANA,WAAtB;AAAA,qBASE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AACXqB,cAAAA,KAAK,EAAE,KADI;AAEXC,cAAAA,QAAQ,EAAE;AAFC,aAAb;AAAA,sCAKeX,SAAD,CAAYY,MAL1B;AAAA,YATF,EAeE,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAE,KAAKzB,OAAhC;AAAA,sBACE,KAAC,IAAD;AAAM,cAAA,IAAI,EAAC,eAAX;AAA2B,cAAA,IAAI,EAAE,EAAjC;AAAqC,cAAA,KAAK,EAAC;AAA3C;AADF,YAfF;AAAA,UADF,EAuBE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEe,MAAM,CAACW,IAApB;AAAA,oBACE,KAAC,QAAD;AACE,YAAA,IAAI,EAAEd,QADR;AAEE,YAAA,UAAU,EAAE;AAAA,kBAAGe,IAAH,QAAGA,IAAH;AAAA,qBAAc,KAAC,OAAD;AAAS,gBAAA,IAAI,EAAEA,IAAf;AAAqB,gBAAA,cAAc,EAAE,MAAI,CAAChC,cAA1C;AAA0D,gBAAA,OAAO,EAAEgC;AAAnE,gBAAd;AAAA,aAFd;AAGE,YAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,qBAAUA,IAAI,CAACC,EAAf;AAAA,aAHhB;AAIE,YAAA,sBAAsB,EAAE;AAAA,qBAAM,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAAEX,kBAAAA,MAAM,EAAE,GAAV;AAAeY,kBAAAA,eAAe,EAAE;AAAhC;AAAb,gBAAN;AAAA;AAJ1B;AADF,UAvBF;AAAA,QADF;AAkCD;;;;EAlFoB7C,S;;AAsFvB,IAAM+B,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/Bf,EAAAA,SAAS,EAAE;AACTgB,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BN,EAAAA,IAAI,EAAE;AACJM,IAAAA,IAAI,EAAE,CADF;AAEJV,IAAAA,cAAc,EAAE,QAFZ;AAGJW,IAAAA,YAAY,EAAE,EAHV;AAIJJ,IAAAA,eAAe,EAAE;AAJb;AAJyB,CAAlB,CAAf;;AAWA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACjC,KAAD;AAAA,SAAY;AAClCW,IAAAA,QAAQ,EAAEX,KAAK,CAACW,QAAN,CAAeuB,KADS;AAElCtB,IAAAA,SAAS,EAAEZ,KAAK,CAACmC,IAAN,CAAWA;AAFY,GAAZ;AAAA,CAAxB;;AAKA,eAAenD,OAAO,CAACiD,eAAD,EAAkB;AAAE9C,EAAAA,SAAS,EAATA,SAAF;AAAaC,EAAAA,aAAa,EAAbA;AAAb,CAAlB,CAAP,CAAuDG,QAAvD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View,\n  StyleSheet,\n  FlatList,\n  TouchableOpacity,\n  Image,\n  Animated,\n  Text,\n\n\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport Product from '../components/Product.component';\nimport { addToCart } from '../redux/actions/cartActions';\nimport { fetchProducts } from '../redux/actions/productAction';\nconst logoImage = require('../assets/images/eco-logo.png');\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      opacity: new Animated.Value(1)\n    };\n\n\n  }\n  UNSAFE_componentWillMount = () => {\n    this.props.fetchProducts();\n  }\n\n  addItemsToCart = (product) => {\n    this.props.addToCart(product);\n  }\n  goHome = () => {\n    this.props.navigation.navigate('Products');\n  }\n  startAnimation() {\n    Animated.timing(this.state.opacity,\n      {\n        toValue: 0,\n        duration: 500,\n        useNativeDriver: true,\n      }).start(() => {\n        setTimeout(() => {\n          this.endAnimation()\n        }, 100);\n      })\n  }\n  endAnimation() {\n    Animated.timing(this.state.opacity,\n      {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true,\n      }).start()\n  }\n\n  onPress = () => {\n    this.props.navigation.navigate('Checkout');\n  }\n\n  render() {\n    const { products, navigation } = this.props\n    const { cartItems } = this.props;\n    let animatedStyle = { opacity: this.state.opacity }\n    return (\n      <View style={styles.container}>\n        <Animated.View style={{\n          height: 50,\n          width: 350,\n          paddingTop: 10,\n          marginLeft: 10,\n          flexDirection: 'row', justifyContent: 'space-between',\n          opacity: this.state.opacity\n        }}>\n\n          <Text style={{\n            color: 'red',\n            fontSize: 14,\n\n          }}>\n            Your cart: {(cartItems).length} items</Text>\n          <TouchableOpacity onPress={this.onPress}>\n            <Icon name=\"chevron-right\" size={20} color=\"#900\" />\n          </TouchableOpacity>\n\n\n        </Animated.View>\n\n        <View style={styles.body}>\n          <FlatList\n            data={products}\n            renderItem={({ item }) => <Product item={item} addItemsToCart={this.addItemsToCart} product={item} />}\n            keyExtractor={(item) => item.id}\n            ItemSeparatorComponent={() => <View style={{ height: 0.5, backgroundColor: '#34495e90' }} />} />\n        </View>\n      </View>\n\n    );\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    borderRadius: 10,\n    backgroundColor: '#fff'\n  }\n});\nconst mapStateToProps = (state) => ({\n  products: state.products.items,\n  cartItems: state.cart.cart\n})\n\nexport default connect(mapStateToProps, { addToCart, fetchProducts })(Products);\n"]},"metadata":{},"sourceType":"module"}