{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { ADD_ORDER } from \"../actions/types\";\nvar initialState = {\n  order: {\n    items: [],\n    customer: {}\n  }\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ORDER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        order: {\n          customer: action.payload.customer,\n          items: action.payload.cartItems\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/ReactNativeProject/react-native-shop-with-expo/src/redux/reducers/orderReducer.js"],"names":["ADD_ORDER","initialState","order","items","customer","state","action","type","payload","cartItems"],"mappings":";;;;;;AAAA,SAASA,SAAT;AAEA,IAAMC,YAAY,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AADS,CAArB;AAOA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACrD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKP,SAAL;AACC,6CACIK,KADJ;AAECH,QAAAA,KAAK,EAAE;AAACE,UAAAA,QAAQ,EAAEE,MAAM,CAACE,OAAP,CAAeJ,QAA1B;AAAoCD,UAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeC;AAA1D;AAFR;;AAID;AACC,aAAOJ,KAAP;AAPF;AASA","sourcesContent":["import { ADD_ORDER } from '../actions/types';\n\nconst initialState = {\n\t    order: {\n        items: [],\n        customer: {}\n    }\n}\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase ADD_ORDER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\torder: {customer: action.payload.customer, items: action.payload.cartItems}\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}"]},"metadata":{},"sourceType":"module"}