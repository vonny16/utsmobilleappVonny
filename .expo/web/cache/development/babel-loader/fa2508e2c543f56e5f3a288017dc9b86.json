{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CartItems from \"./CartItems.component\";\nimport CustomerForm from \"./CustomerForm.component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CheckoutItems = function (_Component) {\n  _inherits(CheckoutItems, _Component);\n\n  var _super = _createSuper(CheckoutItems);\n\n  function CheckoutItems() {\n    _classCallCheck(this, CheckoutItems);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CheckoutItems, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          cartItems = _this$props.cartItems,\n          navigation = _this$props.navigation,\n          cartTotal = _this$props.cartTotal;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.annouc,\n          children: _jsx(Text, {\n            style: styles.anncText,\n            children: \"Please confirm your order and checkout your cart.\"\n          })\n        }), _jsxs(View, {\n          style: styles.ckitems,\n          children: [_jsx(FlatList, {\n            data: cartItems,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item,\n                  index = _ref.index;\n              return _jsx(CartItems, {\n                item: item,\n                index: index\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.id;\n            },\n            ItemSeparatorComponent: function ItemSeparatorComponent() {\n              return _jsx(View, {\n                style: {\n                  height: 0.3,\n                  backgroundColor: '#34495e90'\n                }\n              });\n            }\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [\"Total: $ \", cartTotal.toFixed(2)]\n          })]\n        }), _jsx(View, {\n          style: styles.custForm,\n          children: _jsx(ScrollView, {\n            children: _jsx(CustomerForm, {\n              navigation: navigation\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return CheckoutItems;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  custForm: {\n    flex: 1\n  },\n  ckitems: {\n    height: 170\n  },\n  annouc: {\n    padding: 12,\n    borderRadius: 5,\n    backgroundColor: '#34495e90',\n    margin: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    color: 'red'\n  },\n  anncText: {\n    textAlign: 'center',\n    color: '#fff'\n  }\n});\nexport default CheckoutItems;","map":{"version":3,"sources":["D:/ReactNativeProject/react-native-shop-with-expo/src/components/CheckoutItems.component.js"],"names":["React","Component","CartItems","CustomerForm","CheckoutItems","props","cartItems","navigation","cartTotal","styles","container","annouc","anncText","ckitems","item","index","id","height","backgroundColor","text","toFixed","custForm","StyleSheet","create","flex","padding","borderRadius","margin","justifyContent","alignItems","textAlign","color"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAUA,OAAOC,SAAP;AACA,OAAOC,YAAP;;;;IAEMC,a;;;;;;;;;;;;;WACJ,kBAAS;AACR,wBAA6C,KAAKC,KAAlD;AAAA,UAAQC,SAAR,eAAQA,SAAR;AAAA,UAAmBC,UAAnB,eAAmBA,UAAnB;AAAA,UAA+BC,SAA/B,eAA+BA,SAA/B;AACC,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,mBAEQ,KAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA,oBACC,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA;AAAA;AADD,UAFR,EAKQ,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA,qBACA,KAAC,QAAD;AACI,YAAA,IAAI,EAAEP,SADV;AAEC,YAAA,UAAU,EAAE;AAAA,kBAAEQ,IAAF,QAAEA,IAAF;AAAA,kBAAQC,KAAR,QAAQA,KAAR;AAAA,qBAAmB,KAAC,SAAD;AAAW,gBAAA,IAAI,EAAED,IAAjB;AAAuB,gBAAA,KAAK,EAAEC;AAA9B,gBAAnB;AAAA,aAFb;AAGC,YAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,qBAAUA,IAAI,CAACE,EAAf;AAAA,aAHf;AAIC,YAAA,sBAAsB,EAAG;AAAA,qBAAK,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAACC,kBAAAA,MAAM,EAAC,GAAR;AAAaC,kBAAAA,eAAe,EAAC;AAA7B;AAAb,gBAAL;AAAA;AAJ1B,YADA,EAOA,MAAC,IAAD;AAAM,YAAA,KAAK,EAAET,MAAM,CAACU,IAApB;AAAA,oCAAqCX,SAAD,CAAYY,OAAZ,CAAoB,CAApB,CAApC;AAAA,YAPA;AAAA,UALR,EAcQ,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,MAAM,CAACY,QAApB;AAAA,oBACI,KAAC,UAAD;AAAA,sBACF,KAAC,YAAD;AAAc,cAAA,UAAU,EAAEd;AAA1B;AADE;AADJ,UAdR;AAAA,QADF;AAuBD;;;;EA1ByBN,S;;AA6B5B,IAAMQ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAC;AACRc,IAAAA,IAAI,EAAE;AADE,GADqB;AAI/BH,EAAAA,QAAQ,EAAE;AACRG,IAAAA,IAAI,EAAE;AADE,GAJqB;AAO/BX,EAAAA,OAAO,EAAE;AACPI,IAAAA,MAAM,EAAE;AADD,GAPsB;AAU7BN,EAAAA,MAAM,EAAC;AACLc,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,YAAY,EAAE,CAFT;AAGLR,IAAAA,eAAe,EAAE,WAHZ;AAILS,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,cAAc,EAAE,QALX;AAMLC,IAAAA,UAAU,EAAE;AANP,GAVsB;AAkB7BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,SAAS,EAAE,QADP;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAlBuB;AAsB7BnB,EAAAA,QAAQ,EAAC;AACLkB,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,KAAK,EAAE;AAFF;AAtBoB,CAAlB,CAAf;AA4BA,eAAe3B,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n\tView,\n\tText,\n\tFlatList,\n  StyleSheet,\n  ScrollView\n} from 'react-native';\n\nimport CartItems  from './CartItems.component';\nimport CustomerForm from './CustomerForm.component';\n\nclass CheckoutItems extends Component {  \n  render() {\n  \tconst { cartItems, navigation, cartTotal } = this.props;\n    return (\n      <View style={styles.container}>\n            \t\n            \t\t<View style={styles.annouc}>\n            \t\t\t<Text style={styles.anncText}>Please confirm your order and checkout your cart.</Text>\n            \t\t</View>\n            \t\t<View style={styles.ckitems}>\n            \t\t<FlatList \n                  data={cartItems}\n            \t\t\trenderItem={({item, index}) => <CartItems item={item} index={index} />}\n            \t\t\tkeyExtractor={(item) => item.id}\n            \t\t\tItemSeparatorComponent= {()=> <View style={{height:0.3, backgroundColor:'#34495e90'}}/> }\n            \t\t/>\n            \t\t<Text style={styles.text}>Total: $ {(cartTotal).toFixed(2)}</Text>\t\n            \t\t</View>\n            \t\t<View style={styles.custForm}>\n                  <ScrollView>\n            \t\t\t <CustomerForm navigation={navigation}/>\n                  </ScrollView> \n            \t\t</View>\n\n       </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container:{\n    flex: 1\n  },\n  custForm: {\n    flex: 1\n  },\n  ckitems: {\n    height: 170\n  },\n    annouc:{\n      padding: 12,\n      borderRadius: 5,\n      backgroundColor: '#34495e90',\n      margin: 10,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    text: {\n      textAlign: 'center',\n      color: 'red'\n    },\n    anncText:{\n        textAlign: 'center',\n        color: '#fff'  \n    }\n});\n\nexport default CheckoutItems;"]},"metadata":{},"sourceType":"module"}